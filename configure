#!/bin/bash

set -euo pipefail

############################################################
#
#               Developer configuration
#
############################################################

# Lines with this suffix will be preprocessed
preprocessorSuffix='# <<< configure'

# Usually Makefile
inFile='Makefile'

# Usually Makefile
outFile="${inFile}"

#
declare -A variables
variables['INSTALL_PATH']="${HOME}/bin"
variables['INVOCATION_COMMAND']='gh-pages'

# Author Name <author.email@example.com>
author='Roman Pit√°k <roman@pitak.net>'

#
helpMessage='
This is a ./configure script for the gh-pages script.

SYNOPSIS:
\t./configure --option=value --option=value ...

OPTIONS:
\t--install-path           : Where will I be installed?
\t--invocation-command     : How will you be calling me?
'
#
successMessage='
Configuration successfull!
You can now run
\n\tmake install\n
to complete the installation.
'
############################################################
#              End of developer configuration
############################################################
# There should be no need to edit below this line.

help() {
    echo -e "${helpMessage}"
    echo -e '\nDEFAULT VALUES:'
    for key in "${!variables[@]}"; do
        option="--$(echo ${key,,} | sed -e 's/_/-/')"
        echo -e "\t${option}=${variables[$key]}"
    done
    echo -e "\nAUTHOR:\n\t${author}"
}

preprocessor() {
    sedFile="$(mktemp)"
    for key in "${!variables[@]}"; do
        echo "${key}=${variables["${key}"]}"
        echo "${key} = ${variables["${key}"]}"
    done | gawk '
        BEGIN {FS="="; preprocessorSuffix="'"${preprocessorSuffix}"'"}
        {
            gsub(/\//,"\\/", $2)
            gsub(/\//,"\\/", preprocessorSuffix)
            print "s/^" $1 "=.*" preprocessorSuffix "$/" $1 "=" $2 preprocessorSuffix "/"
        }
    '  > "${sedFile}"
    sed --file="${sedFile}"
    rm "${sedFile}"
}

declare -A overrideVariables
overrideVariables=()
stdOut='/dev/stdout'
stdErr='/dev/stderr'
while [[ $# > 0 ]]; do
    case "${1}" in
        -h|--help)
            help; exit 0
            ;;
        --preprocessor-suffix=*)
            preprocessorSuffix="${1//--preprocessor-suffix=/}"
            ;;
        --silent)
            stdOut='/dev/null'
            ;;
        --variable-*)  # non-default variables
            assignment="${1//--variable-/}"
            overrideVariables["${assignment//=*/}"]="${assignment//*=/}"
            ;;
        *)  # defaultVariables processing
            # convert --install-path to INSTALL_PATH
            key="$(echo "${1^^}" | sed -e 's/^--//' -e 's/-/_/' -e 's/=.*$//')"
            if test "${variables[$key]+isset}"; then
                variables["${key}"]="$(echo "${1}" | sed -e 's/^[^=]*=//')"
            else
                echo "Unknown option \"${1}\"" >> "${stdErr}"; help; exit 63
            fi
            ;;
    esac
    shift
done

if test 0 -ne ${#overrideVariables[@]}; then
    unset variables
    declare -A variables
    for key in ${!overrideVariables[@]}; do
        variables["${key}"]="${overrideVariables["${key}"]}"
    done
fi

tmpOutFile="$(mktemp)"
preprocessor < "${inFile}" > ${tmpOutFile}
cat "${tmpOutFile}" > "${outFile}"
rm --force "${tmpOutFile}"
echo -e "${successMessage}" >> "${stdOut}"
